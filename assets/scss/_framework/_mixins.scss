/* Mixin: font size calculation */
@mixin font-size($size) {
  $rem-value: ($size / 10);
  $px-value: $size;
  $lineHeight: ($size * 1.5);
  line-height: $lineHeight;
  font-size: strip-units($rem-value) + rem;
  font-size: strip-units($px-value) + px;
}

/* Mixin: font-smoothing */
@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

/* Alignment */
@mixin alignleft {
  display: inline;
  float: left;
  margin-right: $margin;
}
@mixin alignright {
  display: inline;
  float: right;
  margin-left: $margin;
}

@mixin aligncenter {
  clear: both;
  display: block;
  margin: 0 auto;
}

/* Retina Display Background image Mixin
 * USAGE: background: url("logo.png") no-repeat;
 *        @include image-2x("logo2x.png", 100px, 25px);
 */
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin user-select() {
  -webkit-user-select: none; /* Chrome all / Safari all */
  -moz-user-select: none; /* Firefox all */
  -ms-user-select: none; /* IE 10+ */

  /* No support for these yet, use at own risk */
  -o-user-select: none;
  user-select: none;

  -webkit-touch-callout: none;
}

/* Mixin: font-smoothing */
@mixin font-smoothing($value: antialiased) {
  @if $value == antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
  }
}

@mixin placeholder {
  $placeholders: ":-webkit-input" ":-moz" "-moz" "-ms-input";
  @each $placeholder in $placeholders {
    &:#{$placeholder}-placeholder {
      @content;
    }
  }
}

@mixin backdrop-filter($filter) {
  -webkit-backdrop-filter: $filter;
  -moz-backdrop-filter: $filter;
  backdrop-filter: $filter;
}

@function filters($filter, $value) {
  @return #{$filter}#{"(" + $value + ")"};
}

$prefixes: "-webkit-", "-moz-", "-ms-", "-o-", null;

@mixin prefixer($property, $value) {
  @each $prefix in $prefixes {
    #{$prefix}#{$property}: $value;
  }
}

@mixin filter($properties) {
  // Your vendor prefixing stuff here, I am using Bourbon:
  @include prefixer(filter, $properties);
}
